{
    "basePath": "/",
    "consumes": [
        "application/json"
    ],
    "definitions": {
        "AbilitiesModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/AbilitiesModelPut"
                },
                {
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AbilitiesModelPut": {
            "properties": {
                "groups": {
                    "items": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ContainersModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ContainersModelPut"
                },
                {
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "pid": {
                            "type": "integer"
                        },
                        "state": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ContainersModelPost": {
            "allOf": [
                {
                    "$ref": "#/definitions/ContainersModelPut"
                },
                {
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "template": {
                            "$ref": "#/definitions/ContainersModelTemplate"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "ContainersModelPut": {
            "properties": {
                "lxc": {
                    "$ref": "#/definitions/LxcContainerConf"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ContainersModelTemplate": {
            "properties": {
                "args": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "GroupsModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/GroupsModelPut"
                },
                {
                    "properties": {
                        "id": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "GroupsModelPost": {
            "allOf": [
                {
                    "$ref": "#/definitions/GroupsModelPut"
                },
                {
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "GroupsModelPut": {
            "properties": {
                "abilities": {
                    "items": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "users": {
                    "items": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "HostRebootModelPost": {
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LxcCap": {
            "properties": {
                "drop": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "keep": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LxcCgroup": {
            "properties": {
                "cpu": {
                    "$ref": "#/definitions/LxcCgroupCpu"
                },
                "cpuset": {
                    "$ref": "#/definitions/LxcCgroupCpuset"
                },
                "memory": {
                    "$ref": "#/definitions/LxcCgroupMemory"
                }
            },
            "type": "object"
        },
        "LxcCgroupCpu": {
            "properties": {
                "shares": {
                    "default": 1024,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LxcCgroupCpuset": {
            "properties": {
                "cpus": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LxcCgroupMemory": {
            "properties": {
                "limit_in_bytes": {
                    "type": "integer"
                },
                "memsw": {
                    "$ref": "#/definitions/LxcCgroupMemoryMemsw"
                }
            },
            "type": "object"
        },
        "LxcCgroupMemoryMemsw": {
            "properties": {
                "limit_in_bytes": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LxcConsole": {
            "properties": {
                "_": {
                    "type": "string"
                },
                "logfile": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LxcContainerConf": {
            "properties": {
                "aa_allow_incomplete": {
                    "default": 0,
                    "type": "integer"
                },
                "aa_profile": {
                    "type": "string"
                },
                "arch": {
                    "type": "string"
                },
                "autodev": {
                    "default": 1,
                    "type": "integer"
                },
                "cap": {
                    "$ref": "#/definitions/LxcCap"
                },
                "cgroup": {
                    "$ref": "#/definitions/LxcCgroup"
                },
                "console": {
                    "$ref": "#/definitions/LxcConsole"
                },
                "devttydir": {
                    "type": "string"
                },
                "environment": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ephemeral": {
                    "default": 0,
                    "type": "integer"
                },
                "group": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "haltsignal": {
                    "default": "SIGPWR",
                    "type": "string"
                },
                "hook": {
                    "$ref": "#/definitions/LxcHook"
                },
                "id_map": {
                    "type": "string"
                },
                "include": {
                    "type": "string"
                },
                "init_cmd": {
                    "type": "string"
                },
                "init_gid": {
                    "default": 0,
                    "type": "integer"
                },
                "init_uid": {
                    "default": 0,
                    "type": "integer"
                },
                "kmsg": {
                    "default": 0,
                    "type": "integer"
                },
                "logfile": {
                    "type": "string"
                },
                "loglevel": {
                    "default": 5,
                    "type": "integer"
                },
                "monitor": {
                    "$ref": "#/definitions/LxcMonitor"
                },
                "mount": {
                    "$ref": "#/definitions/LxcMount"
                },
                "network": {
                    "items": {
                        "$ref": "#/definitions/LxcNetwork"
                    },
                    "type": "array"
                },
                "no_new_privs": {
                    "default": 0,
                    "type": "integer"
                },
                "pts": {
                    "type": "string"
                },
                "rebootsignal": {
                    "default": "SIGINT",
                    "type": "string"
                },
                "rootfs": {
                    "$ref": "#/definitions/LxcRootfs"
                },
                "se_context": {
                    "type": "string"
                },
                "seccomp": {
                    "type": "string"
                },
                "start": {
                    "$ref": "#/definitions/LxcStart"
                },
                "stopsignal": {
                    "default": "SIGKILL",
                    "type": "string"
                },
                "syslog": {
                    "type": "string"
                },
                "tty": {
                    "type": "string"
                },
                "utsname": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LxcHook": {
            "properties": {
                "autodev": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "clone": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "destroy": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "mount": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "post-stop": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "pre-mount": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "pre-start": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "start": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "stop": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LxcMonitor": {
            "properties": {
                "unshare": {
                    "default": 0,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LxcMount": {
            "properties": {
                "_": {
                    "type": "string"
                },
                "auto": {
                    "type": "string"
                },
                "entry": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LxcNetwork": {
            "properties": {
                "flags": {
                    "type": "string"
                },
                "hwaddr": {
                    "type": "string"
                },
                "ipv4": {
                    "$ref": "#/definitions/LxcNetworkIpv4"
                },
                "ipv6": {
                    "$ref": "#/definitions/LxcNetworkIpv6"
                },
                "link": {
                    "type": "string"
                },
                "macvlan": {
                    "$ref": "#/definitions/LxcNetworkMacvlan"
                },
                "mtu": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "script": {
                    "$ref": "#/definitions/LxcNetworkScript"
                },
                "type": {
                    "type": "string"
                },
                "veth": {
                    "$ref": "#/definitions/LxcNetworkVeth"
                },
                "vlan": {
                    "$ref": "#/definitions/LxcNetworkVlan"
                }
            },
            "type": "object"
        },
        "LxcNetworkIpv4": {
            "properties": {
                "_": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gateway": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LxcNetworkIpv6": {
            "properties": {
                "_": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gateway": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LxcNetworkMacvlan": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LxcNetworkScript": {
            "properties": {
                "down": {
                    "type": "string"
                },
                "up": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LxcNetworkVeth": {
            "properties": {
                "pair": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LxcNetworkVlan": {
            "properties": {
                "id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LxcRootfs": {
            "properties": {
                "_": {
                    "type": "string"
                },
                "backend": {
                    "type": "string"
                },
                "mount": {
                    "type": "string"
                },
                "options": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LxcStart": {
            "properties": {
                "auto": {
                    "default": 0,
                    "type": "integer"
                },
                "delay": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "UsersModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/UsersModelGet"
                },
                {
                    "properties": {
                        "id": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "UsersModelGet": {
            "properties": {
                "admin": {
                    "default": false,
                    "type": "boolean"
                },
                "containers": {
                    "items": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "type": "array"
                },
                "email": {
                    "type": "string"
                },
                "groups": {
                    "items": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UsersModelPost": {
            "allOf": [
                {
                    "$ref": "#/definitions/UsersModelPut"
                },
                {
                    "properties": {
                        "groups": {
                            "items": {
                                "minimum": 1,
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "name": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "groups",
                        "name",
                        "password",
                        "username"
                    ],
                    "type": "object"
                }
            ]
        },
        "UsersModelPut": {
            "allOf": [
                {
                    "$ref": "#/definitions/UsersModelGet"
                },
                {
                    "properties": {
                        "password": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        }
    },
    "info": {
        "description": "https://github.com/lxc-webpanel/lxc-rest",
        "title": "LXC Web Panel API documentation",
        "version": "1.0"
    },
    "paths": {
        "/api/v1/lwp/abilities": {
            "get": {
                "operationId": "get_abilities_list",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AbilitiesModel"
                        }
                    }
                },
                "summary": "Get abilities list",
                "tags": [
                    "api/v1/lwp/"
                ]
            }
        },
        "/api/v1/lwp/abilities/{id}": {
            "get": {
                "operationId": "get_abilities",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AbilitiesModel"
                        }
                    }
                },
                "summary": "Get ability",
                "tags": [
                    "api/v1/lwp/"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "operationId": "put_abilities",
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AbilitiesModelPut"
                        }
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AbilitiesModel"
                        }
                    }
                },
                "summary": "Update ability",
                "tags": [
                    "api/v1/lwp/"
                ]
            }
        },
        "/api/v1/lwp/groups": {
            "get": {
                "operationId": "get_groups_list",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GroupsModel"
                        }
                    }
                },
                "summary": "Get groups list",
                "tags": [
                    "api/v1/lwp/"
                ]
            },
            "post": {
                "operationId": "post_groups_list",
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsModelPost"
                        }
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GroupsModel"
                        }
                    }
                },
                "summary": "Create group",
                "tags": [
                    "api/v1/lwp/"
                ]
            }
        },
        "/api/v1/lwp/groups/{id}": {
            "delete": {
                "operationId": "delete_groups",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Delete group",
                "tags": [
                    "api/v1/lwp/"
                ]
            },
            "get": {
                "operationId": "get_groups",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GroupsModel"
                        }
                    }
                },
                "summary": "Get group",
                "tags": [
                    "api/v1/lwp/"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "operationId": "put_groups",
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsModelPut"
                        }
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GroupsModel"
                        }
                    }
                },
                "summary": "Update group",
                "tags": [
                    "api/v1/lwp/"
                ]
            }
        },
        "/api/v1/lwp/host": {
            "get": {
                "operationId": "get_host_stats",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Get host stats (uptime, cpu, ram, etc)",
                "tags": [
                    "api/v1/lwp/"
                ]
            }
        },
        "/api/v1/lwp/host/reboot": {
            "post": {
                "operationId": "post_host_reboot",
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HostRebootModelPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Reboot host",
                "tags": [
                    "api/v1/lwp/"
                ]
            }
        },
        "/api/v1/lwp/me": {
            "delete": {
                "operationId": "delete_me",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Delete me (stupid)",
                "tags": [
                    "api/v1/lwp/"
                ]
            },
            "get": {
                "operationId": "get_me",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UsersModelGet"
                        }
                    }
                },
                "summary": "Get me",
                "tags": [
                    "api/v1/lwp/"
                ]
            },
            "put": {
                "operationId": "put_me",
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UsersModelPut"
                        }
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UsersModel"
                        }
                    }
                },
                "summary": "Update me",
                "tags": [
                    "api/v1/lwp/"
                ]
            }
        },
        "/api/v1/lwp/users": {
            "get": {
                "operationId": "get_users_list",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UsersModelGet"
                        }
                    }
                },
                "summary": "Get users list",
                "tags": [
                    "api/v1/lwp/"
                ]
            },
            "post": {
                "operationId": "post_users_list",
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UsersModelPost"
                        }
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UsersModel"
                        }
                    }
                },
                "summary": "Create user",
                "tags": [
                    "api/v1/lwp/"
                ]
            }
        },
        "/api/v1/lwp/users/{id}": {
            "delete": {
                "operationId": "delete_users",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Delete user",
                "tags": [
                    "api/v1/lwp/"
                ]
            },
            "get": {
                "operationId": "get_users",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UsersModelGet"
                        }
                    }
                },
                "summary": "Get user",
                "tags": [
                    "api/v1/lwp/"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "operationId": "put_users",
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UsersModelPut"
                        }
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UsersModel"
                        }
                    }
                },
                "summary": "Update user",
                "tags": [
                    "api/v1/lwp/"
                ]
            }
        },
        "/api/v1/lxc/checkconfig": {
            "get": {
                "operationId": "get_lxc_check_config",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Check LXC configuration (lxc-checkconfig)",
                "tags": [
                    "api/v1/lxc/"
                ]
            }
        },
        "/api/v1/lxc/containers": {
            "get": {
                "operationId": "get_containers_list",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContainersModel"
                        }
                    }
                },
                "summary": "Get containers list",
                "tags": [
                    "api/v1/lxc/"
                ]
            },
            "post": {
                "operationId": "post_containers_list",
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContainersModelPost"
                        }
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContainersModelPost"
                        }
                    },
                    "201": {
                        "description": "Container created"
                    },
                    "409": {
                        "description": "Container already exists"
                    },
                    "500": {
                        "description": "Can't create container"
                    }
                },
                "summary": "Create container",
                "tags": [
                    "api/v1/lxc/"
                ]
            }
        },
        "/api/v1/lxc/containers/{id}": {
            "delete": {
                "operationId": "delete_containers",
                "responses": {
                    "200": {
                        "description": "Container destroyed"
                    },
                    "404": {
                        "description": "Container doesn't exists"
                    },
                    "409": {
                        "description": "Can't destroy and/or stop container"
                    },
                    "500": {
                        "description": "Can't create container"
                    }
                },
                "summary": "Destroy container",
                "tags": [
                    "api/v1/lxc/"
                ]
            },
            "get": {
                "operationId": "get_containers",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContainersModel"
                        }
                    }
                },
                "summary": "Get container",
                "tags": [
                    "api/v1/lxc/"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "put": {
                "operationId": "put_containers",
                "parameters": [
                    {
                        "in": "body",
                        "name": "payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ContainersModelPut"
                        }
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContainersModelPut"
                        }
                    }
                },
                "summary": "Update container",
                "tags": [
                    "api/v1/lxc/"
                ]
            }
        },
        "/api/v1/lxc/containers/{id}/freeze": {
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "operationId": "post_containers_freeze",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Freeze container",
                "tags": [
                    "api/v1/lxc/"
                ]
            }
        },
        "/api/v1/lxc/containers/{id}/restart": {
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "operationId": "post_containers_restart",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Restart container",
                "tags": [
                    "api/v1/lxc/"
                ]
            }
        },
        "/api/v1/lxc/containers/{id}/shutdown": {
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "operationId": "post_containers_shutdown",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Shutdown container",
                "tags": [
                    "api/v1/lxc/"
                ]
            }
        },
        "/api/v1/lxc/containers/{id}/start": {
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "operationId": "post_containers_start",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Start container",
                "tags": [
                    "api/v1/lxc/"
                ]
            }
        },
        "/api/v1/lxc/containers/{id}/stop": {
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "operationId": "post_containers_stop",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Stop container",
                "tags": [
                    "api/v1/lxc/"
                ]
            }
        },
        "/api/v1/lxc/containers/{id}/unfreeze": {
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "operationId": "post_containers_unfreeze",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Unfreeze container",
                "tags": [
                    "api/v1/lxc/"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "responses": {
        "MaskError": {
            "description": "When any error occurs on mask"
        },
        "ParseError": {
            "description": "When a mask can't be parsed"
        }
    },
    "swagger": "2.0",
    "tags": [
        {
            "description": "Default namespace",
            "name": "default"
        },
        {
            "description": "Operations related to LXC",
            "name": "api/v1/lxc/"
        },
        {
            "description": "Operations related to LXC Web Panel",
            "name": "api/v1/lwp/"
        }
    ]
}
